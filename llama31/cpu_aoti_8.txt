python3 torchchat.py export llama3.1 --quantize '{"linear:int8": {"groupsize": 0}, "precision": {"dtype":"bfloat16"}, "executor":{"accelerator":"cpu"}}' --output-dso-path /tmp/model8.so
python3 torchchat.py generate llama3.1 --dso-path /tmp/model8.so --prompt "Once upon a time," --max-new-tokens 256 --device cpu --num-samples 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
python3 torchchat.py export llama3.1 --quantize '{"linear:int8": {"groupsize": 0}, "precision": {"dtype":"bfloat16"}, "executor":{"accelerator":"cpu"}}' --output-dso-path /tmp/model8.so
W1031 13:40:56.381460 2582789 site-packages/torch/_export/__init__.py:225] +============================+
W1031 13:40:56.381941 2582789 site-packages/torch/_export/__init__.py:226] |     !!!   WARNING   !!!    |
W1031 13:40:56.382172 2582789 site-packages/torch/_export/__init__.py:227] +============================+
W1031 13:40:56.382364 2582789 site-packages/torch/_export/__init__.py:228] torch._export.aot_compile() is being deprecated, please switch to directly calling torch._inductor.aoti_compile_and_package(torch.export.export()) instead.
Using device=cpu
Setting max_seq_length to 300 for DSO export.
Loading model...
Time to load model: 0.11 seconds
Quantizing the model with: {'linear:int8': {'groupsize': 0}, 'precision': {'dtype': 'bfloat16'}, 'executor': {'accelerator': 'cpu'}}
Time to quantize model: 47.99 seconds
-----------------------------------------------------------
Exporting model using AOT Inductor to /tmp/model8.so
The generated DSO model can be found at: /tmp/model8.so
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
python3 torchchat.py generate llama3.1 --dso-path /tmp/model8.so --prompt "Once upon a time," --max-new-tokens 256 --device cpu --num-samples 3
Warning: checkpoint path ignored because an exported DSO or PTE path was specified
Warning: checkpoint path ignored because an exported DSO or PTE path was specified
Using device=cpu Intel(R) Xeon(R) Platinum 8339HC CPU @ 1.80GHz
Loading model...
Time to load model: 0.11 seconds
-----------------------------------------------------------
Once upon a time, there was a man who loved to fish. He had been fishing since he was a young boy and had developed a deep connection with the natural world. Over the years, he had learned how to read the water, how to cast a perfect line, and how to wait patiently for the perfect catch.
One day, as he was sitting on the shore, fishing rod in hand, he noticed a beautiful girl watching him from a distance. She was sitting on a rock, her eyes fixed intently on him, a small smile playing on her lips. The man couldn't help but feel a sense of excitement and curiosity. Who was this girl, and what was she doing here?
As he continued to fish, he noticed that the girl would occasionally glance at his line and then back at him. He smiled to himself, thinking that she might be waiting for him to catch a fish. But as the minutes ticked by, she didn't seem to be paying much attention to the fish at all. Instead, she seemed to be watching him, studying him, as if trying to figure him out.
The man began to feel a sense of unease. Who was this girl, and what did she want from him? He tried to focus on his fishing, but he couldn2024-10-31:13:48:17,464 INFO     [generate.py:1162] 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                
Generated 255 tokens                 
Time for inference 1: 216.8460 sec total                 
Time to first token: 7.1199 sec with sequential prefill.                

      Total throughput: 1.1806 tokens/sec, 0.8471 s/token                 
First token throughput: 0.1405 tokens/sec, 7.1199 s/token                 
 Next token throughput: 1.2159 tokens/sec, 0.8225 s/token                     
2024-10-31:13:48:17,464 INFO     [generate.py:1173] 
Bandwidth achieved: 18.96 GB/s
2024-10-31:13:48:17,464 INFO     [generate.py:1177] *** This first iteration will include cold start effects for dynamic import, hardware caches. ***

========================================

Once upon a time, in a land far, far away, there was a small village surrounded by vast farmlands and towering mountains. The villagers lived simple lives, relying on the land and their skills to survive. They were known for their kindness, generosity, and strong sense of community.
Among the villagers was a young girl named Luna. She was a curious and adventurous soul, always eager to explore the world beyond her village. Luna lived with her wise and loving grandmother, who taught her the ways of the world, the secrets of nature, and the importance of respecting the land and its creatures.
One day, a great drought struck the land, and the crops began to wither and die. The villagers, who had always relied on the land for their livelihood, were in dire straits. Many of them grew worried and fearful, not knowing how they would survive without the bounty of the earth.
Luna's grandmother, sensing the anxiety of the villagers, called upon Loki, the mischievous trickster god, to guide them through this difficult time. Loki, known for his cunning and magical powers, agreed to help the villagers, but only if they could prove their worthiness to receive his aid.
Luna, determined to help her community, set out on a journey to find2024-10-31:13:54:50,374 INFO     [generate.py:1162] 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                
Generated 255 tokens                 
Time for inference 2: 392.9100 sec total                 
Time to first token: 1.5681 sec with sequential prefill.                

      Total throughput: 0.6515 tokens/sec, 1.5348 s/token                 
First token throughput: 0.6377 tokens/sec, 1.5681 s/token                 
 Next token throughput: 0.6516 tokens/sec, 1.5347 s/token                     
2024-10-31:13:54:50,375 INFO     [generate.py:1173] 
Bandwidth achieved: 10.46 GB/s

========================================

Once upon a time, there was a young woman named Sarah. She was a happy and optimistic person who always looked on the bright side of life. But one day, she found herself in a situation that no one could have predicted. She was involved in a serious car accident and suffered severe injuries, including a broken leg and a severely damaged spinal cord. As a result of the accident, Sarah became a paraplegic.
Sarah's world was turned upside down. She was now confined to a wheelchair and faced a long and arduous road to recovery. But despite her physical limitations, Sarah refused to give up. She was determined to maintain her independence and live life on her own terms.
With the help of her family and friends, Sarah began to adapt to her new circumstances. She learned to navigate her home and community in her wheelchair, and she discovered new ways to enjoy activities that she had previously taken for granted. She also started to pursue new hobbies and interests, such as painting and writing, which helped her to express herself and maintain her sense of identity.

As Sarah navigated her new reality, she encountered many challenges and obstacles. There were times when she felt frustrated, angry, and sad. But she also found moments of joy, love, and inspiration. She discovered the strength2024-10-31:14:00:22,634 INFO     [generate.py:1162] 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                
Generated 255 tokens                 
Time for inference 3: 332.2597 sec total                 
Time to first token: 5.1787 sec with sequential prefill.                

      Total throughput: 0.7705 tokens/sec, 1.2979 s/token                 
First token throughput: 0.1931 tokens/sec, 5.1787 s/token                 
 Next token throughput: 0.7796 tokens/sec, 1.2827 s/token                     
2024-10-31:14:00:22,635 INFO     [generate.py:1173] 
Bandwidth achieved: 12.37 GB/s

========================================


      Average tokens/sec (total): 0.87                 
Average tokens/sec (first token): 0.32                 
Average tokens/sec (next tokens): 0.88 
                
Memory used: 0.00 GB
